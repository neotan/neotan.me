// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-fetch';
import type { BlogPagesListError, BlogPagesListResponse, BlogPagesCreateData, BlogPagesCreateError, BlogPagesCreateResponse, BlogPagesRetrieveData, BlogPagesRetrieveError, BlogPagesRetrieveResponse, BlogPagesUpdateData, BlogPagesUpdateError, BlogPagesUpdateResponse, BlogPagesPartialUpdateData, BlogPagesPartialUpdateError, BlogPagesPartialUpdateResponse, BlogPagesDestroyData, BlogPagesDestroyError, BlogPagesDestroyResponse, BlogPostsListError, BlogPostsListResponse, BlogPostsCreateData, BlogPostsCreateError, BlogPostsCreateResponse, BlogPostsRetrieveData, BlogPostsRetrieveError, BlogPostsRetrieveResponse, BlogPostsUpdateData, BlogPostsUpdateError, BlogPostsUpdateResponse, BlogPostsPartialUpdateData, BlogPostsPartialUpdateError, BlogPostsPartialUpdateResponse, BlogPostsDestroyData, BlogPostsDestroyError, BlogPostsDestroyResponse, SchemaRetrieveData, SchemaRetrieveError, SchemaRetrieveResponse } from './types.gen';

export const client = createClient(createConfig());

export const blogPagesList = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<BlogPagesListResponse, BlogPagesListError, ThrowOnError>({
    ...options,
    url: '/api/blog/pages/'
}); };

export const blogPagesCreate = <ThrowOnError extends boolean = false>(options: Options<BlogPagesCreateData, ThrowOnError>) => { return (options?.client ?? client).post<BlogPagesCreateResponse, BlogPagesCreateError, ThrowOnError>({
    ...options,
    url: '/api/blog/pages/'
}); };

export const blogPagesRetrieve = <ThrowOnError extends boolean = false>(options: Options<BlogPagesRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<BlogPagesRetrieveResponse, BlogPagesRetrieveError, ThrowOnError>({
    ...options,
    url: '/api/blog/pages/{id}/'
}); };

export const blogPagesUpdate = <ThrowOnError extends boolean = false>(options: Options<BlogPagesUpdateData, ThrowOnError>) => { return (options?.client ?? client).put<BlogPagesUpdateResponse, BlogPagesUpdateError, ThrowOnError>({
    ...options,
    url: '/api/blog/pages/{id}/'
}); };

export const blogPagesPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<BlogPagesPartialUpdateData, ThrowOnError>) => { return (options?.client ?? client).patch<BlogPagesPartialUpdateResponse, BlogPagesPartialUpdateError, ThrowOnError>({
    ...options,
    url: '/api/blog/pages/{id}/'
}); };

export const blogPagesDestroy = <ThrowOnError extends boolean = false>(options: Options<BlogPagesDestroyData, ThrowOnError>) => { return (options?.client ?? client).delete<BlogPagesDestroyResponse, BlogPagesDestroyError, ThrowOnError>({
    ...options,
    url: '/api/blog/pages/{id}/'
}); };

export const blogPostsList = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<BlogPostsListResponse, BlogPostsListError, ThrowOnError>({
    ...options,
    url: '/api/blog/posts/'
}); };

export const blogPostsCreate = <ThrowOnError extends boolean = false>(options: Options<BlogPostsCreateData, ThrowOnError>) => { return (options?.client ?? client).post<BlogPostsCreateResponse, BlogPostsCreateError, ThrowOnError>({
    ...options,
    url: '/api/blog/posts/'
}); };

export const blogPostsRetrieve = <ThrowOnError extends boolean = false>(options: Options<BlogPostsRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<BlogPostsRetrieveResponse, BlogPostsRetrieveError, ThrowOnError>({
    ...options,
    url: '/api/blog/posts/{id}/'
}); };

export const blogPostsUpdate = <ThrowOnError extends boolean = false>(options: Options<BlogPostsUpdateData, ThrowOnError>) => { return (options?.client ?? client).put<BlogPostsUpdateResponse, BlogPostsUpdateError, ThrowOnError>({
    ...options,
    url: '/api/blog/posts/{id}/'
}); };

export const blogPostsPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<BlogPostsPartialUpdateData, ThrowOnError>) => { return (options?.client ?? client).patch<BlogPostsPartialUpdateResponse, BlogPostsPartialUpdateError, ThrowOnError>({
    ...options,
    url: '/api/blog/posts/{id}/'
}); };

export const blogPostsDestroy = <ThrowOnError extends boolean = false>(options: Options<BlogPostsDestroyData, ThrowOnError>) => { return (options?.client ?? client).delete<BlogPostsDestroyResponse, BlogPostsDestroyError, ThrowOnError>({
    ...options,
    url: '/api/blog/posts/{id}/'
}); };

/**
 * OpenApi3 schema for this API. Format can be selected via content negotiation.
 *
 * - YAML: application/vnd.oai.openapi
 * - JSON: application/vnd.oai.openapi+json
 */
export const schemaRetrieve = <ThrowOnError extends boolean = false>(options?: Options<SchemaRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<SchemaRetrieveResponse, SchemaRetrieveError, ThrowOnError>({
    ...options,
    url: '/api/schema/'
}); };